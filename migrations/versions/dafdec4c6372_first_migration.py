"""first migration

Revision ID: dafdec4c6372
Revises: 
Create Date: 2025-04-16 09:29:10.504817

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dafdec4c6372'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('admin_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('parent',
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=100), nullable=False),
    sa.Column('contact', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('parent_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('professor',
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=100), nullable=False),
    sa.Column('contact', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('professor_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('course',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('course_name', sa.String(length=100), nullable=False),
    sa.Column('total_classes', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['professor.professor_id'], ),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_table('student',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('contact', sa.String(length=50), nullable=True),
    sa.Column('branch', sa.String(length=50), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], ),
    sa.PrimaryKeyConstraint('student_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('attendance',
    sa.Column('attendance_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('attendance_id')
    )
    op.create_table('classroom',
    sa.Column('room_number', sa.String(length=20), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.professor_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('room_number')
    )
    op.create_table('marks',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('mark', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], ),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.professor_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('student_id', 'professor_id', 'course_id')
    )
    op.create_table('professor_student',
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.professor_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('professor_id', 'student_id')
    )
    op.create_table('student_course',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('student_id', 'course_id')
    )
    op.create_table('student_parent',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['parent.parent_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('student_id', 'parent_id')
    )
    op.create_table('admin_attendance',
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('attendance_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.admin_id'], ),
    sa.ForeignKeyConstraint(['attendance_id'], ['attendance.attendance_id'], ),
    sa.PrimaryKeyConstraint('admin_id', 'attendance_id')
    )
    op.create_table('parent_attendance_view',
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('attendance_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attendance_id'], ['attendance.attendance_id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['parent.parent_id'], ),
    sa.PrimaryKeyConstraint('parent_id', 'attendance_id')
    )
    op.create_table('professor_attendance_view',
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('attendance_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attendance_id'], ['attendance.attendance_id'], ),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.professor_id'], ),
    sa.PrimaryKeyConstraint('professor_id', 'attendance_id')
    )
    op.create_table('professor_classroom',
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('room_number', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.professor_id'], ),
    sa.ForeignKeyConstraint(['room_number'], ['classroom.room_number'], ),
    sa.PrimaryKeyConstraint('professor_id', 'room_number')
    )
    op.create_table('student_classroom',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('room_number', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['room_number'], ['classroom.room_number'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('student_id', 'room_number')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_classroom')
    op.drop_table('professor_classroom')
    op.drop_table('professor_attendance_view')
    op.drop_table('parent_attendance_view')
    op.drop_table('admin_attendance')
    op.drop_table('student_parent')
    op.drop_table('student_course')
    op.drop_table('professor_student')
    op.drop_table('marks')
    op.drop_table('classroom')
    op.drop_table('attendance')
    op.drop_table('student')
    op.drop_table('course')
    op.drop_table('professor')
    op.drop_table('parent')
    op.drop_table('admin')
    # ### end Alembic commands ###
